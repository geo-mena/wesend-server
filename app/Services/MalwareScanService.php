<?php

namespace App\Services;

use Exception;
use GuzzleHttp\Client;
use Illuminate\Support\Facades\Log;

class MalwareScanService
{
    protected $client;
    protected $apiKey;

    public function __construct()
    {
        $this->client = new Client([
            'base_uri' => 'https://www.virustotal.com/vtapi/v2/',
            'timeout' => config('services.virustotal.timeout', 30),
        ]);
        $this->apiKey = config('services.virustotal.api_key');
    }

    public function scanFile(string $fileContent): array
    {
        $sha256 = hash('sha256', $fileContent);

        try {
            // Primero verificamos si ya existe un análisis
            $existingAnalysis = $this->checkExistingAnalysis($sha256);
            if ($existingAnalysis) {
                return $existingAnalysis;
            }

            // Si no existe, realizamos un nuevo análisis
            return $this->uploadAndScan($fileContent);
        } catch (Exception $e) {
            Log::error('VirusTotal scan error: ' . $e->getMessage());
            throw new Exception('Error scanning file: ' . $e->getMessage());
        }
    }

    protected function checkExistingAnalysis(string $hash): ?array
    {
        $response = $this->client->get('file/report', [
            'query' => [
                'apikey' => $this->apiKey,
                'resource' => $hash
            ]
        ]);

        $result = json_decode($response->getBody(), true);

        if ($result['response_code'] === 0) {
            return null;
        }

        return $this->processResult($result);
    }

    protected function uploadAndScan(string $fileContent): array
    {
        // Subir archivo para análisis
        $response = $this->client->post('file/scan', [
            'multipart' => [
                [
                    'name' => 'apikey',
                    'contents' => $this->apiKey
                ],
                [
                    'name' => 'file',
                    'contents' => $fileContent,
                    'filename' => 'scan_file'
                ]
            ]
        ]);

        $result = json_decode($response->getBody(), true);

        // Esperar y obtener resultados (recomendado por VirusTotal)
        sleep(15);
        return $this->getResults($result['scan_id']);
    }

    protected function getResults(string $scanId): array
    {
        $response = $this->client->get('file/report', [
            'query' => [
                'apikey' => $this->apiKey,
                'resource' => $scanId
            ]
        ]);

        return $this->processResult(json_decode($response->getBody(), true));
    }

    protected function processResult(array $result): array
    {
        return [
            'is_safe' => $result['positives'] === 0,
            'total_scanners' => $result['total'],
            'positive_detections' => $result['positives'],
            'scan_date' => $result['scan_date'],
            'detailed_results' => $result['scans'] ?? []
        ];
    }
}
